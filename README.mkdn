# NAME

Plack::Test::Simple - Object-Oriented PSGI Application Testing

# VERSION

version 0.000004

# SYNOPSIS

    Test::More;
    use Plack::Test::Simple;

    # prepare test container
    my $t = Plack::Test::Simple->new('/path/to/app.psgi');

    # global request configuration
    my $req = $t->request;
    $req->headers->authorization_basic('h@cker', 's3cret');
    $req->headers->content_type('application/json');

    # standard GET request test
    my $tx = $t->transaction('get', '/', 'test description');

    # shorthand GET request test
    my $tx = $t->get_returns_200('/', 'test description');
    $tx->content_like(qr/hello world/i, 'test description');

    # shorthand POST request
    my $tx = $t->post_returns_200('/search', {}, 'test description');
    $tx->data_has('/results/4/title', 'test description');

    done_testing;

# DESCRIPTION

Plack::Test::Simple is a collection of testing helpers for anyone developing
Plack applications. This module is a wrapper around [Plack::Test](http://search.cpan.org/perldoc?Plack::Test) providing a
unified interface to test PSGI applications using [HTTP::Request](http://search.cpan.org/perldoc?HTTP::Request) and
[HTTP::Response](http://search.cpan.org/perldoc?HTTP::Response) objects. Typically a Plack web application's deployment stack
includes various middlewares and utilities which are now even easier to test
along-side the actual web application code.

# ATTRIBUTES

## request

The request attribute contains the [HTTP::Request](http://search.cpan.org/perldoc?HTTP::Request) object which will be used
to process the HTTP requests. This attribute is never reset.

## psgi

The psgi attribute contains a coderef containing the PSGI compliant application
code or a string containing the path to the psgi file.

# METHODS

## transaction

The transaction method returns a [Plack::Test::Simple::Transaction](http://search.cpan.org/perldoc?Plack::Test::Simple::Transaction) object
containing the HTTP request and response object that will be used to facilitate
the HTTP transaction. The actually HTTP request is deferred until the response
object is needed, this allows you to further modify the transactions HTTP
request object before it is processed. This method optionally accepts an HTTP
request method and a request path (or URI object), and these parameters are
used to further modify the transaction request object. Please see the
[Plack::Test::Simple::Transaction](http://search.cpan.org/perldoc?Plack::Test::Simple::Transaction) for more information on how to use the
transaction object to further automate tests.

    my $tx = $self->transaction('get', '/?query=Perl');

## connect\_returns\_100

The connect\_returns\_100 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 100.

    my $tx = $self->connect_returns_100('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(100, 'test description');

## connect\_returns\_101

The connect\_returns\_101 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 101.

    my $tx = $self->connect_returns_101('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(101, 'test description');

## connect\_returns\_200

The connect\_returns\_200 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 200.

    my $tx = $self->connect_returns_200('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(200, 'test description');

## connect\_returns\_201

The connect\_returns\_201 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 201.

    my $tx = $self->connect_returns_201('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(201, 'test description');

## connect\_returns\_202

The connect\_returns\_202 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 202.

    my $tx = $self->connect_returns_202('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(202, 'test description');

## connect\_returns\_203

The connect\_returns\_203 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 203.

    my $tx = $self->connect_returns_203('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(203, 'test description');

## connect\_returns\_204

The connect\_returns\_204 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 204.

    my $tx = $self->connect_returns_204('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(204, 'test description');

## connect\_returns\_205

The connect\_returns\_205 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 205.

    my $tx = $self->connect_returns_205('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(205, 'test description');

## connect\_returns\_206

The connect\_returns\_206 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 206.

    my $tx = $self->connect_returns_206('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(206, 'test description');

## connect\_returns\_300

The connect\_returns\_300 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 300.

    my $tx = $self->connect_returns_300('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(300, 'test description');

## connect\_returns\_301

The connect\_returns\_301 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 301.

    my $tx = $self->connect_returns_301('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(301, 'test description');

## connect\_returns\_302

The connect\_returns\_302 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 302.

    my $tx = $self->connect_returns_302('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(302, 'test description');

## connect\_returns\_303

The connect\_returns\_303 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 303.

    my $tx = $self->connect_returns_303('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(303, 'test description');

## connect\_returns\_304

The connect\_returns\_304 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 304.

    my $tx = $self->connect_returns_304('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(304, 'test description');

## connect\_returns\_305

The connect\_returns\_305 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 305.

    my $tx = $self->connect_returns_305('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(305, 'test description');

## connect\_returns\_306

The connect\_returns\_306 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 306.

    my $tx = $self->connect_returns_306('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(306, 'test description');

## connect\_returns\_307

The connect\_returns\_307 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 307.

    my $tx = $self->connect_returns_307('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(307, 'test description');

## connect\_returns\_308

The connect\_returns\_308 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 308.

    my $tx = $self->connect_returns_308('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(308, 'test description');

## connect\_returns\_400

The connect\_returns\_400 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 400.

    my $tx = $self->connect_returns_400('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(400, 'test description');

## connect\_returns\_401

The connect\_returns\_401 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 401.

    my $tx = $self->connect_returns_401('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(401, 'test description');

## connect\_returns\_402

The connect\_returns\_402 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 402.

    my $tx = $self->connect_returns_402('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(402, 'test description');

## connect\_returns\_403

The connect\_returns\_403 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 403.

    my $tx = $self->connect_returns_403('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(403, 'test description');

## connect\_returns\_404

The connect\_returns\_404 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 404.

    my $tx = $self->connect_returns_404('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(404, 'test description');

## connect\_returns\_405

The connect\_returns\_405 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 405.

    my $tx = $self->connect_returns_405('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(405, 'test description');

## connect\_returns\_406

The connect\_returns\_406 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 406.

    my $tx = $self->connect_returns_406('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(406, 'test description');

## connect\_returns\_407

The connect\_returns\_407 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 407.

    my $tx = $self->connect_returns_407('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(407, 'test description');

## connect\_returns\_408

The connect\_returns\_408 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 408.

    my $tx = $self->connect_returns_408('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(408, 'test description');

## connect\_returns\_409

The connect\_returns\_409 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 409.

    my $tx = $self->connect_returns_409('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(409, 'test description');

## connect\_returns\_410

The connect\_returns\_410 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 410.

    my $tx = $self->connect_returns_410('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(410, 'test description');

## connect\_returns\_411

The connect\_returns\_411 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 411.

    my $tx = $self->connect_returns_411('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(411, 'test description');

## connect\_returns\_412

The connect\_returns\_412 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 412.

    my $tx = $self->connect_returns_412('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(412, 'test description');

## connect\_returns\_413

The connect\_returns\_413 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 413.

    my $tx = $self->connect_returns_413('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(413, 'test description');

## connect\_returns\_414

The connect\_returns\_414 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 414.

    my $tx = $self->connect_returns_414('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(414, 'test description');

## connect\_returns\_415

The connect\_returns\_415 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 415.

    my $tx = $self->connect_returns_415('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(415, 'test description');

## connect\_returns\_416

The connect\_returns\_416 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 416.

    my $tx = $self->connect_returns_416('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(416, 'test description');

## connect\_returns\_417

The connect\_returns\_417 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 417.

    my $tx = $self->connect_returns_417('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(417, 'test description');

## connect\_returns\_500

The connect\_returns\_500 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 500.

    my $tx = $self->connect_returns_500('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(500, 'test description');

## connect\_returns\_501

The connect\_returns\_501 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 501.

    my $tx = $self->connect_returns_501('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(501, 'test description');

## connect\_returns\_502

The connect\_returns\_502 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 502.

    my $tx = $self->connect_returns_502('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(502, 'test description');

## connect\_returns\_503

The connect\_returns\_503 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 503.

    my $tx = $self->connect_returns_503('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(503, 'test description');

## connect\_returns\_504

The connect\_returns\_504 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 504.

    my $tx = $self->connect_returns_504('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(504, 'test description');

## connect\_returns\_505

The connect\_returns\_505 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 505.

    my $tx = $self->connect_returns_505('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('connect', '/path/to/resource');
    $tx->status_is(505, 'test description');

## delete\_returns\_100

The delete\_returns\_100 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 100.

    my $tx = $self->delete_returns_100('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(100, 'test description');

## delete\_returns\_101

The delete\_returns\_101 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 101.

    my $tx = $self->delete_returns_101('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(101, 'test description');

## delete\_returns\_200

The delete\_returns\_200 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 200.

    my $tx = $self->delete_returns_200('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(200, 'test description');

## delete\_returns\_201

The delete\_returns\_201 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 201.

    my $tx = $self->delete_returns_201('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(201, 'test description');

## delete\_returns\_202

The delete\_returns\_202 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 202.

    my $tx = $self->delete_returns_202('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(202, 'test description');

## delete\_returns\_203

The delete\_returns\_203 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 203.

    my $tx = $self->delete_returns_203('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(203, 'test description');

## delete\_returns\_204

The delete\_returns\_204 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 204.

    my $tx = $self->delete_returns_204('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(204, 'test description');

## delete\_returns\_205

The delete\_returns\_205 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 205.

    my $tx = $self->delete_returns_205('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(205, 'test description');

## delete\_returns\_206

The delete\_returns\_206 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 206.

    my $tx = $self->delete_returns_206('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(206, 'test description');

## delete\_returns\_300

The delete\_returns\_300 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 300.

    my $tx = $self->delete_returns_300('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(300, 'test description');

## delete\_returns\_301

The delete\_returns\_301 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 301.

    my $tx = $self->delete_returns_301('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(301, 'test description');

## delete\_returns\_302

The delete\_returns\_302 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 302.

    my $tx = $self->delete_returns_302('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(302, 'test description');

## delete\_returns\_303

The delete\_returns\_303 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 303.

    my $tx = $self->delete_returns_303('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(303, 'test description');

## delete\_returns\_304

The delete\_returns\_304 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 304.

    my $tx = $self->delete_returns_304('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(304, 'test description');

## delete\_returns\_305

The delete\_returns\_305 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 305.

    my $tx = $self->delete_returns_305('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(305, 'test description');

## delete\_returns\_306

The delete\_returns\_306 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 306.

    my $tx = $self->delete_returns_306('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(306, 'test description');

## delete\_returns\_307

The delete\_returns\_307 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 307.

    my $tx = $self->delete_returns_307('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(307, 'test description');

## delete\_returns\_308

The delete\_returns\_308 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 308.

    my $tx = $self->delete_returns_308('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(308, 'test description');

## delete\_returns\_400

The delete\_returns\_400 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 400.

    my $tx = $self->delete_returns_400('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(400, 'test description');

## delete\_returns\_401

The delete\_returns\_401 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 401.

    my $tx = $self->delete_returns_401('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(401, 'test description');

## delete\_returns\_402

The delete\_returns\_402 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 402.

    my $tx = $self->delete_returns_402('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(402, 'test description');

## delete\_returns\_403

The delete\_returns\_403 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 403.

    my $tx = $self->delete_returns_403('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(403, 'test description');

## delete\_returns\_404

The delete\_returns\_404 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 404.

    my $tx = $self->delete_returns_404('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(404, 'test description');

## delete\_returns\_405

The delete\_returns\_405 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 405.

    my $tx = $self->delete_returns_405('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(405, 'test description');

## delete\_returns\_406

The delete\_returns\_406 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 406.

    my $tx = $self->delete_returns_406('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(406, 'test description');

## delete\_returns\_407

The delete\_returns\_407 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 407.

    my $tx = $self->delete_returns_407('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(407, 'test description');

## delete\_returns\_408

The delete\_returns\_408 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 408.

    my $tx = $self->delete_returns_408('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(408, 'test description');

## delete\_returns\_409

The delete\_returns\_409 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 409.

    my $tx = $self->delete_returns_409('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(409, 'test description');

## delete\_returns\_410

The delete\_returns\_410 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 410.

    my $tx = $self->delete_returns_410('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(410, 'test description');

## delete\_returns\_411

The delete\_returns\_411 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 411.

    my $tx = $self->delete_returns_411('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(411, 'test description');

## delete\_returns\_412

The delete\_returns\_412 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 412.

    my $tx = $self->delete_returns_412('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(412, 'test description');

## delete\_returns\_413

The delete\_returns\_413 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 413.

    my $tx = $self->delete_returns_413('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(413, 'test description');

## delete\_returns\_414

The delete\_returns\_414 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 414.

    my $tx = $self->delete_returns_414('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(414, 'test description');

## delete\_returns\_415

The delete\_returns\_415 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 415.

    my $tx = $self->delete_returns_415('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(415, 'test description');

## delete\_returns\_416

The delete\_returns\_416 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 416.

    my $tx = $self->delete_returns_416('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(416, 'test description');

## delete\_returns\_417

The delete\_returns\_417 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 417.

    my $tx = $self->delete_returns_417('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(417, 'test description');

## delete\_returns\_500

The delete\_returns\_500 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 500.

    my $tx = $self->delete_returns_500('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(500, 'test description');

## delete\_returns\_501

The delete\_returns\_501 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 501.

    my $tx = $self->delete_returns_501('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(501, 'test description');

## delete\_returns\_502

The delete\_returns\_502 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 502.

    my $tx = $self->delete_returns_502('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(502, 'test description');

## delete\_returns\_503

The delete\_returns\_503 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 503.

    my $tx = $self->delete_returns_503('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(503, 'test description');

## delete\_returns\_504

The delete\_returns\_504 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 504.

    my $tx = $self->delete_returns_504('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(504, 'test description');

## delete\_returns\_505

The delete\_returns\_505 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 505.

    my $tx = $self->delete_returns_505('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('delete', '/path/to/resource');
    $tx->status_is(505, 'test description');

## get\_returns\_100

The get\_returns\_100 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 100.

    my $tx = $self->get_returns_100('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(100, 'test description');

## get\_returns\_101

The get\_returns\_101 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 101.

    my $tx = $self->get_returns_101('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(101, 'test description');

## get\_returns\_200

The get\_returns\_200 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 200.

    my $tx = $self->get_returns_200('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(200, 'test description');

## get\_returns\_201

The get\_returns\_201 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 201.

    my $tx = $self->get_returns_201('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(201, 'test description');

## get\_returns\_202

The get\_returns\_202 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 202.

    my $tx = $self->get_returns_202('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(202, 'test description');

## get\_returns\_203

The get\_returns\_203 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 203.

    my $tx = $self->get_returns_203('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(203, 'test description');

## get\_returns\_204

The get\_returns\_204 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 204.

    my $tx = $self->get_returns_204('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(204, 'test description');

## get\_returns\_205

The get\_returns\_205 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 205.

    my $tx = $self->get_returns_205('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(205, 'test description');

## get\_returns\_206

The get\_returns\_206 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 206.

    my $tx = $self->get_returns_206('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(206, 'test description');

## get\_returns\_300

The get\_returns\_300 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 300.

    my $tx = $self->get_returns_300('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(300, 'test description');

## get\_returns\_301

The get\_returns\_301 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 301.

    my $tx = $self->get_returns_301('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(301, 'test description');

## get\_returns\_302

The get\_returns\_302 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 302.

    my $tx = $self->get_returns_302('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(302, 'test description');

## get\_returns\_303

The get\_returns\_303 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 303.

    my $tx = $self->get_returns_303('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(303, 'test description');

## get\_returns\_304

The get\_returns\_304 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 304.

    my $tx = $self->get_returns_304('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(304, 'test description');

## get\_returns\_305

The get\_returns\_305 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 305.

    my $tx = $self->get_returns_305('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(305, 'test description');

## get\_returns\_306

The get\_returns\_306 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 306.

    my $tx = $self->get_returns_306('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(306, 'test description');

## get\_returns\_307

The get\_returns\_307 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 307.

    my $tx = $self->get_returns_307('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(307, 'test description');

## get\_returns\_308

The get\_returns\_308 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 308.

    my $tx = $self->get_returns_308('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(308, 'test description');

## get\_returns\_400

The get\_returns\_400 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 400.

    my $tx = $self->get_returns_400('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(400, 'test description');

## get\_returns\_401

The get\_returns\_401 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 401.

    my $tx = $self->get_returns_401('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(401, 'test description');

## get\_returns\_402

The get\_returns\_402 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 402.

    my $tx = $self->get_returns_402('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(402, 'test description');

## get\_returns\_403

The get\_returns\_403 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 403.

    my $tx = $self->get_returns_403('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(403, 'test description');

## get\_returns\_404

The get\_returns\_404 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 404.

    my $tx = $self->get_returns_404('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(404, 'test description');

## get\_returns\_405

The get\_returns\_405 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 405.

    my $tx = $self->get_returns_405('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(405, 'test description');

## get\_returns\_406

The get\_returns\_406 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 406.

    my $tx = $self->get_returns_406('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(406, 'test description');

## get\_returns\_407

The get\_returns\_407 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 407.

    my $tx = $self->get_returns_407('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(407, 'test description');

## get\_returns\_408

The get\_returns\_408 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 408.

    my $tx = $self->get_returns_408('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(408, 'test description');

## get\_returns\_409

The get\_returns\_409 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 409.

    my $tx = $self->get_returns_409('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(409, 'test description');

## get\_returns\_410

The get\_returns\_410 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 410.

    my $tx = $self->get_returns_410('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(410, 'test description');

## get\_returns\_411

The get\_returns\_411 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 411.

    my $tx = $self->get_returns_411('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(411, 'test description');

## get\_returns\_412

The get\_returns\_412 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 412.

    my $tx = $self->get_returns_412('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(412, 'test description');

## get\_returns\_413

The get\_returns\_413 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 413.

    my $tx = $self->get_returns_413('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(413, 'test description');

## get\_returns\_414

The get\_returns\_414 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 414.

    my $tx = $self->get_returns_414('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(414, 'test description');

## get\_returns\_415

The get\_returns\_415 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 415.

    my $tx = $self->get_returns_415('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(415, 'test description');

## get\_returns\_416

The get\_returns\_416 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 416.

    my $tx = $self->get_returns_416('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(416, 'test description');

## get\_returns\_417

The get\_returns\_417 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 417.

    my $tx = $self->get_returns_417('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(417, 'test description');

## get\_returns\_500

The get\_returns\_500 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 500.

    my $tx = $self->get_returns_500('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(500, 'test description');

## get\_returns\_501

The get\_returns\_501 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 501.

    my $tx = $self->get_returns_501('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(501, 'test description');

## get\_returns\_502

The get\_returns\_502 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 502.

    my $tx = $self->get_returns_502('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(502, 'test description');

## get\_returns\_503

The get\_returns\_503 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 503.

    my $tx = $self->get_returns_503('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(503, 'test description');

## get\_returns\_504

The get\_returns\_504 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 504.

    my $tx = $self->get_returns_504('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(504, 'test description');

## get\_returns\_505

The get\_returns\_505 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 505.

    my $tx = $self->get_returns_505('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('get', '/path/to/resource');
    $tx->status_is(505, 'test description');

## head\_returns\_100

The head\_returns\_100 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 100.

    my $tx = $self->head_returns_100('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(100, 'test description');

## head\_returns\_101

The head\_returns\_101 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 101.

    my $tx = $self->head_returns_101('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(101, 'test description');

## head\_returns\_200

The head\_returns\_200 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 200.

    my $tx = $self->head_returns_200('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(200, 'test description');

## head\_returns\_201

The head\_returns\_201 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 201.

    my $tx = $self->head_returns_201('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(201, 'test description');

## head\_returns\_202

The head\_returns\_202 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 202.

    my $tx = $self->head_returns_202('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(202, 'test description');

## head\_returns\_203

The head\_returns\_203 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 203.

    my $tx = $self->head_returns_203('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(203, 'test description');

## head\_returns\_204

The head\_returns\_204 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 204.

    my $tx = $self->head_returns_204('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(204, 'test description');

## head\_returns\_205

The head\_returns\_205 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 205.

    my $tx = $self->head_returns_205('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(205, 'test description');

## head\_returns\_206

The head\_returns\_206 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 206.

    my $tx = $self->head_returns_206('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(206, 'test description');

## head\_returns\_300

The head\_returns\_300 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 300.

    my $tx = $self->head_returns_300('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(300, 'test description');

## head\_returns\_301

The head\_returns\_301 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 301.

    my $tx = $self->head_returns_301('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(301, 'test description');

## head\_returns\_302

The head\_returns\_302 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 302.

    my $tx = $self->head_returns_302('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(302, 'test description');

## head\_returns\_303

The head\_returns\_303 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 303.

    my $tx = $self->head_returns_303('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(303, 'test description');

## head\_returns\_304

The head\_returns\_304 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 304.

    my $tx = $self->head_returns_304('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(304, 'test description');

## head\_returns\_305

The head\_returns\_305 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 305.

    my $tx = $self->head_returns_305('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(305, 'test description');

## head\_returns\_306

The head\_returns\_306 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 306.

    my $tx = $self->head_returns_306('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(306, 'test description');

## head\_returns\_307

The head\_returns\_307 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 307.

    my $tx = $self->head_returns_307('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(307, 'test description');

## head\_returns\_308

The head\_returns\_308 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 308.

    my $tx = $self->head_returns_308('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(308, 'test description');

## head\_returns\_400

The head\_returns\_400 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 400.

    my $tx = $self->head_returns_400('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(400, 'test description');

## head\_returns\_401

The head\_returns\_401 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 401.

    my $tx = $self->head_returns_401('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(401, 'test description');

## head\_returns\_402

The head\_returns\_402 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 402.

    my $tx = $self->head_returns_402('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(402, 'test description');

## head\_returns\_403

The head\_returns\_403 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 403.

    my $tx = $self->head_returns_403('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(403, 'test description');

## head\_returns\_404

The head\_returns\_404 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 404.

    my $tx = $self->head_returns_404('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(404, 'test description');

## head\_returns\_405

The head\_returns\_405 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 405.

    my $tx = $self->head_returns_405('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(405, 'test description');

## head\_returns\_406

The head\_returns\_406 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 406.

    my $tx = $self->head_returns_406('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(406, 'test description');

## head\_returns\_407

The head\_returns\_407 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 407.

    my $tx = $self->head_returns_407('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(407, 'test description');

## head\_returns\_408

The head\_returns\_408 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 408.

    my $tx = $self->head_returns_408('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(408, 'test description');

## head\_returns\_409

The head\_returns\_409 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 409.

    my $tx = $self->head_returns_409('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(409, 'test description');

## head\_returns\_410

The head\_returns\_410 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 410.

    my $tx = $self->head_returns_410('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(410, 'test description');

## head\_returns\_411

The head\_returns\_411 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 411.

    my $tx = $self->head_returns_411('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(411, 'test description');

## head\_returns\_412

The head\_returns\_412 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 412.

    my $tx = $self->head_returns_412('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(412, 'test description');

## head\_returns\_413

The head\_returns\_413 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 413.

    my $tx = $self->head_returns_413('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(413, 'test description');

## head\_returns\_414

The head\_returns\_414 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 414.

    my $tx = $self->head_returns_414('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(414, 'test description');

## head\_returns\_415

The head\_returns\_415 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 415.

    my $tx = $self->head_returns_415('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(415, 'test description');

## head\_returns\_416

The head\_returns\_416 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 416.

    my $tx = $self->head_returns_416('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(416, 'test description');

## head\_returns\_417

The head\_returns\_417 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 417.

    my $tx = $self->head_returns_417('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(417, 'test description');

## head\_returns\_500

The head\_returns\_500 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 500.

    my $tx = $self->head_returns_500('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(500, 'test description');

## head\_returns\_501

The head\_returns\_501 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 501.

    my $tx = $self->head_returns_501('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(501, 'test description');

## head\_returns\_502

The head\_returns\_502 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 502.

    my $tx = $self->head_returns_502('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(502, 'test description');

## head\_returns\_503

The head\_returns\_503 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 503.

    my $tx = $self->head_returns_503('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(503, 'test description');

## head\_returns\_504

The head\_returns\_504 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 504.

    my $tx = $self->head_returns_504('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(504, 'test description');

## head\_returns\_505

The head\_returns\_505 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 505.

    my $tx = $self->head_returns_505('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('head', '/path/to/resource');
    $tx->status_is(505, 'test description');

## options\_returns\_100

The options\_returns\_100 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 100.

    my $tx = $self->options_returns_100('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(100, 'test description');

## options\_returns\_101

The options\_returns\_101 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 101.

    my $tx = $self->options_returns_101('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(101, 'test description');

## options\_returns\_200

The options\_returns\_200 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 200.

    my $tx = $self->options_returns_200('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(200, 'test description');

## options\_returns\_201

The options\_returns\_201 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 201.

    my $tx = $self->options_returns_201('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(201, 'test description');

## options\_returns\_202

The options\_returns\_202 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 202.

    my $tx = $self->options_returns_202('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(202, 'test description');

## options\_returns\_203

The options\_returns\_203 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 203.

    my $tx = $self->options_returns_203('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(203, 'test description');

## options\_returns\_204

The options\_returns\_204 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 204.

    my $tx = $self->options_returns_204('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(204, 'test description');

## options\_returns\_205

The options\_returns\_205 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 205.

    my $tx = $self->options_returns_205('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(205, 'test description');

## options\_returns\_206

The options\_returns\_206 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 206.

    my $tx = $self->options_returns_206('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(206, 'test description');

## options\_returns\_300

The options\_returns\_300 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 300.

    my $tx = $self->options_returns_300('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(300, 'test description');

## options\_returns\_301

The options\_returns\_301 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 301.

    my $tx = $self->options_returns_301('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(301, 'test description');

## options\_returns\_302

The options\_returns\_302 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 302.

    my $tx = $self->options_returns_302('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(302, 'test description');

## options\_returns\_303

The options\_returns\_303 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 303.

    my $tx = $self->options_returns_303('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(303, 'test description');

## options\_returns\_304

The options\_returns\_304 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 304.

    my $tx = $self->options_returns_304('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(304, 'test description');

## options\_returns\_305

The options\_returns\_305 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 305.

    my $tx = $self->options_returns_305('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(305, 'test description');

## options\_returns\_306

The options\_returns\_306 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 306.

    my $tx = $self->options_returns_306('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(306, 'test description');

## options\_returns\_307

The options\_returns\_307 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 307.

    my $tx = $self->options_returns_307('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(307, 'test description');

## options\_returns\_308

The options\_returns\_308 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 308.

    my $tx = $self->options_returns_308('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(308, 'test description');

## options\_returns\_400

The options\_returns\_400 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 400.

    my $tx = $self->options_returns_400('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(400, 'test description');

## options\_returns\_401

The options\_returns\_401 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 401.

    my $tx = $self->options_returns_401('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(401, 'test description');

## options\_returns\_402

The options\_returns\_402 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 402.

    my $tx = $self->options_returns_402('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(402, 'test description');

## options\_returns\_403

The options\_returns\_403 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 403.

    my $tx = $self->options_returns_403('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(403, 'test description');

## options\_returns\_404

The options\_returns\_404 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 404.

    my $tx = $self->options_returns_404('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(404, 'test description');

## options\_returns\_405

The options\_returns\_405 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 405.

    my $tx = $self->options_returns_405('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(405, 'test description');

## options\_returns\_406

The options\_returns\_406 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 406.

    my $tx = $self->options_returns_406('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(406, 'test description');

## options\_returns\_407

The options\_returns\_407 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 407.

    my $tx = $self->options_returns_407('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(407, 'test description');

## options\_returns\_408

The options\_returns\_408 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 408.

    my $tx = $self->options_returns_408('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(408, 'test description');

## options\_returns\_409

The options\_returns\_409 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 409.

    my $tx = $self->options_returns_409('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(409, 'test description');

## options\_returns\_410

The options\_returns\_410 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 410.

    my $tx = $self->options_returns_410('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(410, 'test description');

## options\_returns\_411

The options\_returns\_411 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 411.

    my $tx = $self->options_returns_411('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(411, 'test description');

## options\_returns\_412

The options\_returns\_412 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 412.

    my $tx = $self->options_returns_412('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(412, 'test description');

## options\_returns\_413

The options\_returns\_413 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 413.

    my $tx = $self->options_returns_413('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(413, 'test description');

## options\_returns\_414

The options\_returns\_414 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 414.

    my $tx = $self->options_returns_414('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(414, 'test description');

## options\_returns\_415

The options\_returns\_415 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 415.

    my $tx = $self->options_returns_415('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(415, 'test description');

## options\_returns\_416

The options\_returns\_416 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 416.

    my $tx = $self->options_returns_416('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(416, 'test description');

## options\_returns\_417

The options\_returns\_417 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 417.

    my $tx = $self->options_returns_417('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(417, 'test description');

## options\_returns\_500

The options\_returns\_500 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 500.

    my $tx = $self->options_returns_500('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(500, 'test description');

## options\_returns\_501

The options\_returns\_501 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 501.

    my $tx = $self->options_returns_501('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(501, 'test description');

## options\_returns\_502

The options\_returns\_502 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 502.

    my $tx = $self->options_returns_502('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(502, 'test description');

## options\_returns\_503

The options\_returns\_503 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 503.

    my $tx = $self->options_returns_503('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(503, 'test description');

## options\_returns\_504

The options\_returns\_504 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 504.

    my $tx = $self->options_returns_504('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(504, 'test description');

## options\_returns\_505

The options\_returns\_505 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 505.

    my $tx = $self->options_returns_505('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('options', '/path/to/resource');
    $tx->status_is(505, 'test description');

## patch\_returns\_100

The patch\_returns\_100 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 100.

    my $tx = $self->patch_returns_100('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(100, 'test description');

## patch\_returns\_101

The patch\_returns\_101 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 101.

    my $tx = $self->patch_returns_101('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(101, 'test description');

## patch\_returns\_200

The patch\_returns\_200 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 200.

    my $tx = $self->patch_returns_200('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(200, 'test description');

## patch\_returns\_201

The patch\_returns\_201 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 201.

    my $tx = $self->patch_returns_201('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(201, 'test description');

## patch\_returns\_202

The patch\_returns\_202 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 202.

    my $tx = $self->patch_returns_202('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(202, 'test description');

## patch\_returns\_203

The patch\_returns\_203 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 203.

    my $tx = $self->patch_returns_203('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(203, 'test description');

## patch\_returns\_204

The patch\_returns\_204 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 204.

    my $tx = $self->patch_returns_204('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(204, 'test description');

## patch\_returns\_205

The patch\_returns\_205 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 205.

    my $tx = $self->patch_returns_205('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(205, 'test description');

## patch\_returns\_206

The patch\_returns\_206 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 206.

    my $tx = $self->patch_returns_206('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(206, 'test description');

## patch\_returns\_300

The patch\_returns\_300 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 300.

    my $tx = $self->patch_returns_300('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(300, 'test description');

## patch\_returns\_301

The patch\_returns\_301 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 301.

    my $tx = $self->patch_returns_301('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(301, 'test description');

## patch\_returns\_302

The patch\_returns\_302 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 302.

    my $tx = $self->patch_returns_302('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(302, 'test description');

## patch\_returns\_303

The patch\_returns\_303 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 303.

    my $tx = $self->patch_returns_303('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(303, 'test description');

## patch\_returns\_304

The patch\_returns\_304 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 304.

    my $tx = $self->patch_returns_304('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(304, 'test description');

## patch\_returns\_305

The patch\_returns\_305 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 305.

    my $tx = $self->patch_returns_305('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(305, 'test description');

## patch\_returns\_306

The patch\_returns\_306 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 306.

    my $tx = $self->patch_returns_306('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(306, 'test description');

## patch\_returns\_307

The patch\_returns\_307 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 307.

    my $tx = $self->patch_returns_307('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(307, 'test description');

## patch\_returns\_308

The patch\_returns\_308 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 308.

    my $tx = $self->patch_returns_308('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(308, 'test description');

## patch\_returns\_400

The patch\_returns\_400 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 400.

    my $tx = $self->patch_returns_400('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(400, 'test description');

## patch\_returns\_401

The patch\_returns\_401 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 401.

    my $tx = $self->patch_returns_401('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(401, 'test description');

## patch\_returns\_402

The patch\_returns\_402 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 402.

    my $tx = $self->patch_returns_402('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(402, 'test description');

## patch\_returns\_403

The patch\_returns\_403 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 403.

    my $tx = $self->patch_returns_403('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(403, 'test description');

## patch\_returns\_404

The patch\_returns\_404 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 404.

    my $tx = $self->patch_returns_404('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(404, 'test description');

## patch\_returns\_405

The patch\_returns\_405 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 405.

    my $tx = $self->patch_returns_405('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(405, 'test description');

## patch\_returns\_406

The patch\_returns\_406 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 406.

    my $tx = $self->patch_returns_406('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(406, 'test description');

## patch\_returns\_407

The patch\_returns\_407 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 407.

    my $tx = $self->patch_returns_407('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(407, 'test description');

## patch\_returns\_408

The patch\_returns\_408 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 408.

    my $tx = $self->patch_returns_408('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(408, 'test description');

## patch\_returns\_409

The patch\_returns\_409 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 409.

    my $tx = $self->patch_returns_409('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(409, 'test description');

## patch\_returns\_410

The patch\_returns\_410 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 410.

    my $tx = $self->patch_returns_410('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(410, 'test description');

## patch\_returns\_411

The patch\_returns\_411 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 411.

    my $tx = $self->patch_returns_411('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(411, 'test description');

## patch\_returns\_412

The patch\_returns\_412 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 412.

    my $tx = $self->patch_returns_412('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(412, 'test description');

## patch\_returns\_413

The patch\_returns\_413 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 413.

    my $tx = $self->patch_returns_413('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(413, 'test description');

## patch\_returns\_414

The patch\_returns\_414 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 414.

    my $tx = $self->patch_returns_414('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(414, 'test description');

## patch\_returns\_415

The patch\_returns\_415 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 415.

    my $tx = $self->patch_returns_415('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(415, 'test description');

## patch\_returns\_416

The patch\_returns\_416 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 416.

    my $tx = $self->patch_returns_416('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(416, 'test description');

## patch\_returns\_417

The patch\_returns\_417 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 417.

    my $tx = $self->patch_returns_417('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(417, 'test description');

## patch\_returns\_500

The patch\_returns\_500 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 500.

    my $tx = $self->patch_returns_500('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(500, 'test description');

## patch\_returns\_501

The patch\_returns\_501 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 501.

    my $tx = $self->patch_returns_501('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(501, 'test description');

## patch\_returns\_502

The patch\_returns\_502 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 502.

    my $tx = $self->patch_returns_502('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(502, 'test description');

## patch\_returns\_503

The patch\_returns\_503 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 503.

    my $tx = $self->patch_returns_503('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(503, 'test description');

## patch\_returns\_504

The patch\_returns\_504 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 504.

    my $tx = $self->patch_returns_504('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(504, 'test description');

## patch\_returns\_505

The patch\_returns\_505 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 505.

    my $tx = $self->patch_returns_505('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('patch', '/path/to/resource');
    $tx->status_is(505, 'test description');

## post\_returns\_100

The post\_returns\_100 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 100.

    my $tx = $self->post_returns_100('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(100, 'test description');

## post\_returns\_101

The post\_returns\_101 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 101.

    my $tx = $self->post_returns_101('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(101, 'test description');

## post\_returns\_200

The post\_returns\_200 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 200.

    my $tx = $self->post_returns_200('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(200, 'test description');

## post\_returns\_201

The post\_returns\_201 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 201.

    my $tx = $self->post_returns_201('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(201, 'test description');

## post\_returns\_202

The post\_returns\_202 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 202.

    my $tx = $self->post_returns_202('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(202, 'test description');

## post\_returns\_203

The post\_returns\_203 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 203.

    my $tx = $self->post_returns_203('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(203, 'test description');

## post\_returns\_204

The post\_returns\_204 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 204.

    my $tx = $self->post_returns_204('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(204, 'test description');

## post\_returns\_205

The post\_returns\_205 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 205.

    my $tx = $self->post_returns_205('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(205, 'test description');

## post\_returns\_206

The post\_returns\_206 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 206.

    my $tx = $self->post_returns_206('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(206, 'test description');

## post\_returns\_300

The post\_returns\_300 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 300.

    my $tx = $self->post_returns_300('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(300, 'test description');

## post\_returns\_301

The post\_returns\_301 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 301.

    my $tx = $self->post_returns_301('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(301, 'test description');

## post\_returns\_302

The post\_returns\_302 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 302.

    my $tx = $self->post_returns_302('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(302, 'test description');

## post\_returns\_303

The post\_returns\_303 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 303.

    my $tx = $self->post_returns_303('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(303, 'test description');

## post\_returns\_304

The post\_returns\_304 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 304.

    my $tx = $self->post_returns_304('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(304, 'test description');

## post\_returns\_305

The post\_returns\_305 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 305.

    my $tx = $self->post_returns_305('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(305, 'test description');

## post\_returns\_306

The post\_returns\_306 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 306.

    my $tx = $self->post_returns_306('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(306, 'test description');

## post\_returns\_307

The post\_returns\_307 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 307.

    my $tx = $self->post_returns_307('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(307, 'test description');

## post\_returns\_308

The post\_returns\_308 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 308.

    my $tx = $self->post_returns_308('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(308, 'test description');

## post\_returns\_400

The post\_returns\_400 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 400.

    my $tx = $self->post_returns_400('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(400, 'test description');

## post\_returns\_401

The post\_returns\_401 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 401.

    my $tx = $self->post_returns_401('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(401, 'test description');

## post\_returns\_402

The post\_returns\_402 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 402.

    my $tx = $self->post_returns_402('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(402, 'test description');

## post\_returns\_403

The post\_returns\_403 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 403.

    my $tx = $self->post_returns_403('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(403, 'test description');

## post\_returns\_404

The post\_returns\_404 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 404.

    my $tx = $self->post_returns_404('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(404, 'test description');

## post\_returns\_405

The post\_returns\_405 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 405.

    my $tx = $self->post_returns_405('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(405, 'test description');

## post\_returns\_406

The post\_returns\_406 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 406.

    my $tx = $self->post_returns_406('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(406, 'test description');

## post\_returns\_407

The post\_returns\_407 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 407.

    my $tx = $self->post_returns_407('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(407, 'test description');

## post\_returns\_408

The post\_returns\_408 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 408.

    my $tx = $self->post_returns_408('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(408, 'test description');

## post\_returns\_409

The post\_returns\_409 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 409.

    my $tx = $self->post_returns_409('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(409, 'test description');

## post\_returns\_410

The post\_returns\_410 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 410.

    my $tx = $self->post_returns_410('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(410, 'test description');

## post\_returns\_411

The post\_returns\_411 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 411.

    my $tx = $self->post_returns_411('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(411, 'test description');

## post\_returns\_412

The post\_returns\_412 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 412.

    my $tx = $self->post_returns_412('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(412, 'test description');

## post\_returns\_413

The post\_returns\_413 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 413.

    my $tx = $self->post_returns_413('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(413, 'test description');

## post\_returns\_414

The post\_returns\_414 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 414.

    my $tx = $self->post_returns_414('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(414, 'test description');

## post\_returns\_415

The post\_returns\_415 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 415.

    my $tx = $self->post_returns_415('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(415, 'test description');

## post\_returns\_416

The post\_returns\_416 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 416.

    my $tx = $self->post_returns_416('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(416, 'test description');

## post\_returns\_417

The post\_returns\_417 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 417.

    my $tx = $self->post_returns_417('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(417, 'test description');

## post\_returns\_500

The post\_returns\_500 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 500.

    my $tx = $self->post_returns_500('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(500, 'test description');

## post\_returns\_501

The post\_returns\_501 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 501.

    my $tx = $self->post_returns_501('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(501, 'test description');

## post\_returns\_502

The post\_returns\_502 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 502.

    my $tx = $self->post_returns_502('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(502, 'test description');

## post\_returns\_503

The post\_returns\_503 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 503.

    my $tx = $self->post_returns_503('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(503, 'test description');

## post\_returns\_504

The post\_returns\_504 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 504.

    my $tx = $self->post_returns_504('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(504, 'test description');

## post\_returns\_505

The post\_returns\_505 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 505.

    my $tx = $self->post_returns_505('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('post', '/path/to/resource');
    $tx->status_is(505, 'test description');

## put\_returns\_100

The put\_returns\_100 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 100.

    my $tx = $self->put_returns_100('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(100, 'test description');

## put\_returns\_101

The put\_returns\_101 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 101.

    my $tx = $self->put_returns_101('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(101, 'test description');

## put\_returns\_200

The put\_returns\_200 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 200.

    my $tx = $self->put_returns_200('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(200, 'test description');

## put\_returns\_201

The put\_returns\_201 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 201.

    my $tx = $self->put_returns_201('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(201, 'test description');

## put\_returns\_202

The put\_returns\_202 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 202.

    my $tx = $self->put_returns_202('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(202, 'test description');

## put\_returns\_203

The put\_returns\_203 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 203.

    my $tx = $self->put_returns_203('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(203, 'test description');

## put\_returns\_204

The put\_returns\_204 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 204.

    my $tx = $self->put_returns_204('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(204, 'test description');

## put\_returns\_205

The put\_returns\_205 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 205.

    my $tx = $self->put_returns_205('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(205, 'test description');

## put\_returns\_206

The put\_returns\_206 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 206.

    my $tx = $self->put_returns_206('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(206, 'test description');

## put\_returns\_300

The put\_returns\_300 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 300.

    my $tx = $self->put_returns_300('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(300, 'test description');

## put\_returns\_301

The put\_returns\_301 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 301.

    my $tx = $self->put_returns_301('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(301, 'test description');

## put\_returns\_302

The put\_returns\_302 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 302.

    my $tx = $self->put_returns_302('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(302, 'test description');

## put\_returns\_303

The put\_returns\_303 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 303.

    my $tx = $self->put_returns_303('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(303, 'test description');

## put\_returns\_304

The put\_returns\_304 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 304.

    my $tx = $self->put_returns_304('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(304, 'test description');

## put\_returns\_305

The put\_returns\_305 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 305.

    my $tx = $self->put_returns_305('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(305, 'test description');

## put\_returns\_306

The put\_returns\_306 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 306.

    my $tx = $self->put_returns_306('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(306, 'test description');

## put\_returns\_307

The put\_returns\_307 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 307.

    my $tx = $self->put_returns_307('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(307, 'test description');

## put\_returns\_308

The put\_returns\_308 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 308.

    my $tx = $self->put_returns_308('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(308, 'test description');

## put\_returns\_400

The put\_returns\_400 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 400.

    my $tx = $self->put_returns_400('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(400, 'test description');

## put\_returns\_401

The put\_returns\_401 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 401.

    my $tx = $self->put_returns_401('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(401, 'test description');

## put\_returns\_402

The put\_returns\_402 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 402.

    my $tx = $self->put_returns_402('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(402, 'test description');

## put\_returns\_403

The put\_returns\_403 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 403.

    my $tx = $self->put_returns_403('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(403, 'test description');

## put\_returns\_404

The put\_returns\_404 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 404.

    my $tx = $self->put_returns_404('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(404, 'test description');

## put\_returns\_405

The put\_returns\_405 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 405.

    my $tx = $self->put_returns_405('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(405, 'test description');

## put\_returns\_406

The put\_returns\_406 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 406.

    my $tx = $self->put_returns_406('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(406, 'test description');

## put\_returns\_407

The put\_returns\_407 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 407.

    my $tx = $self->put_returns_407('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(407, 'test description');

## put\_returns\_408

The put\_returns\_408 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 408.

    my $tx = $self->put_returns_408('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(408, 'test description');

## put\_returns\_409

The put\_returns\_409 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 409.

    my $tx = $self->put_returns_409('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(409, 'test description');

## put\_returns\_410

The put\_returns\_410 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 410.

    my $tx = $self->put_returns_410('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(410, 'test description');

## put\_returns\_411

The put\_returns\_411 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 411.

    my $tx = $self->put_returns_411('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(411, 'test description');

## put\_returns\_412

The put\_returns\_412 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 412.

    my $tx = $self->put_returns_412('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(412, 'test description');

## put\_returns\_413

The put\_returns\_413 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 413.

    my $tx = $self->put_returns_413('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(413, 'test description');

## put\_returns\_414

The put\_returns\_414 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 414.

    my $tx = $self->put_returns_414('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(414, 'test description');

## put\_returns\_415

The put\_returns\_415 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 415.

    my $tx = $self->put_returns_415('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(415, 'test description');

## put\_returns\_416

The put\_returns\_416 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 416.

    my $tx = $self->put_returns_416('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(416, 'test description');

## put\_returns\_417

The put\_returns\_417 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 417.

    my $tx = $self->put_returns_417('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(417, 'test description');

## put\_returns\_500

The put\_returns\_500 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 500.

    my $tx = $self->put_returns_500('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(500, 'test description');

## put\_returns\_501

The put\_returns\_501 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 501.

    my $tx = $self->put_returns_501('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(501, 'test description');

## put\_returns\_502

The put\_returns\_502 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 502.

    my $tx = $self->put_returns_502('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(502, 'test description');

## put\_returns\_503

The put\_returns\_503 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 503.

    my $tx = $self->put_returns_503('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(503, 'test description');

## put\_returns\_504

The put\_returns\_504 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 504.

    my $tx = $self->put_returns_504('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(504, 'test description');

## put\_returns\_505

The put\_returns\_505 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 505.

    my $tx = $self->put_returns_505('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('put', '/path/to/resource');
    $tx->status_is(505, 'test description');

## trace\_returns\_100

The trace\_returns\_100 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 100.

    my $tx = $self->trace_returns_100('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(100, 'test description');

## trace\_returns\_101

The trace\_returns\_101 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 101.

    my $tx = $self->trace_returns_101('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(101, 'test description');

## trace\_returns\_200

The trace\_returns\_200 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 200.

    my $tx = $self->trace_returns_200('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(200, 'test description');

## trace\_returns\_201

The trace\_returns\_201 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 201.

    my $tx = $self->trace_returns_201('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(201, 'test description');

## trace\_returns\_202

The trace\_returns\_202 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 202.

    my $tx = $self->trace_returns_202('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(202, 'test description');

## trace\_returns\_203

The trace\_returns\_203 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 203.

    my $tx = $self->trace_returns_203('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(203, 'test description');

## trace\_returns\_204

The trace\_returns\_204 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 204.

    my $tx = $self->trace_returns_204('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(204, 'test description');

## trace\_returns\_205

The trace\_returns\_205 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 205.

    my $tx = $self->trace_returns_205('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(205, 'test description');

## trace\_returns\_206

The trace\_returns\_206 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 206.

    my $tx = $self->trace_returns_206('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(206, 'test description');

## trace\_returns\_300

The trace\_returns\_300 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 300.

    my $tx = $self->trace_returns_300('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(300, 'test description');

## trace\_returns\_301

The trace\_returns\_301 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 301.

    my $tx = $self->trace_returns_301('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(301, 'test description');

## trace\_returns\_302

The trace\_returns\_302 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 302.

    my $tx = $self->trace_returns_302('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(302, 'test description');

## trace\_returns\_303

The trace\_returns\_303 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 303.

    my $tx = $self->trace_returns_303('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(303, 'test description');

## trace\_returns\_304

The trace\_returns\_304 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 304.

    my $tx = $self->trace_returns_304('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(304, 'test description');

## trace\_returns\_305

The trace\_returns\_305 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 305.

    my $tx = $self->trace_returns_305('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(305, 'test description');

## trace\_returns\_306

The trace\_returns\_306 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 306.

    my $tx = $self->trace_returns_306('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(306, 'test description');

## trace\_returns\_307

The trace\_returns\_307 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 307.

    my $tx = $self->trace_returns_307('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(307, 'test description');

## trace\_returns\_308

The trace\_returns\_308 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 308.

    my $tx = $self->trace_returns_308('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(308, 'test description');

## trace\_returns\_400

The trace\_returns\_400 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 400.

    my $tx = $self->trace_returns_400('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(400, 'test description');

## trace\_returns\_401

The trace\_returns\_401 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 401.

    my $tx = $self->trace_returns_401('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(401, 'test description');

## trace\_returns\_402

The trace\_returns\_402 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 402.

    my $tx = $self->trace_returns_402('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(402, 'test description');

## trace\_returns\_403

The trace\_returns\_403 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 403.

    my $tx = $self->trace_returns_403('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(403, 'test description');

## trace\_returns\_404

The trace\_returns\_404 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 404.

    my $tx = $self->trace_returns_404('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(404, 'test description');

## trace\_returns\_405

The trace\_returns\_405 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 405.

    my $tx = $self->trace_returns_405('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(405, 'test description');

## trace\_returns\_406

The trace\_returns\_406 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 406.

    my $tx = $self->trace_returns_406('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(406, 'test description');

## trace\_returns\_407

The trace\_returns\_407 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 407.

    my $tx = $self->trace_returns_407('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(407, 'test description');

## trace\_returns\_408

The trace\_returns\_408 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 408.

    my $tx = $self->trace_returns_408('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(408, 'test description');

## trace\_returns\_409

The trace\_returns\_409 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 409.

    my $tx = $self->trace_returns_409('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(409, 'test description');

## trace\_returns\_410

The trace\_returns\_410 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 410.

    my $tx = $self->trace_returns_410('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(410, 'test description');

## trace\_returns\_411

The trace\_returns\_411 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 411.

    my $tx = $self->trace_returns_411('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(411, 'test description');

## trace\_returns\_412

The trace\_returns\_412 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 412.

    my $tx = $self->trace_returns_412('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(412, 'test description');

## trace\_returns\_413

The trace\_returns\_413 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 413.

    my $tx = $self->trace_returns_413('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(413, 'test description');

## trace\_returns\_414

The trace\_returns\_414 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 414.

    my $tx = $self->trace_returns_414('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(414, 'test description');

## trace\_returns\_415

The trace\_returns\_415 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 415.

    my $tx = $self->trace_returns_415('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(415, 'test description');

## trace\_returns\_416

The trace\_returns\_416 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 416.

    my $tx = $self->trace_returns_416('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(416, 'test description');

## trace\_returns\_417

The trace\_returns\_417 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 417.

    my $tx = $self->trace_returns_417('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(417, 'test description');

## trace\_returns\_500

The trace\_returns\_500 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 500.

    my $tx = $self->trace_returns_500('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(500, 'test description');

## trace\_returns\_501

The trace\_returns\_501 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 501.

    my $tx = $self->trace_returns_501('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(501, 'test description');

## trace\_returns\_502

The trace\_returns\_502 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 502.

    my $tx = $self->trace_returns_502('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(502, 'test description');

## trace\_returns\_503

The trace\_returns\_503 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 503.

    my $tx = $self->trace_returns_503('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(503, 'test description');

## trace\_returns\_504

The trace\_returns\_504 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 504.

    my $tx = $self->trace_returns_504('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(504, 'test description');

## trace\_returns\_505

The trace\_returns\_505 method is a shorthand method for returning a
transaction object much like the transaction method except the the actual HTTP
request is made and the server's HTTP response code is tested to ensure it
returns a 505.

    my $tx = $self->trace_returns_505('/path/to/resource', 'test description');

    # shorthand for
    my $tx = $self->transaction('trace', '/path/to/resource');
    $tx->status_is(505, 'test description');

# AUTHOR

Al Newkirk <anewkirk@ana.io>

# COPYRIGHT AND LICENSE

This software is copyright (c) 2013 by Al Newkirk.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
